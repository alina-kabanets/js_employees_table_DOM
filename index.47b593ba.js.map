{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAO,SAAS,aAAa,CAAC,QAC9B,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAS,SAAS,aAAa,CAAC,SAClC,EAAQ,EAAG,EAAM,gBAAgB,CAAC,OAChC,EAAU,EAAG,EAAO,gBAAgB,CAAC,OAE3C,EAAO,gBAAgB,CAAC,QAAS,SAAC,CAAlC,EACE,IAAM,EAAS,EAAE,MAAM,CAAC,OAAO,CAAC,MAC1B,EAAQ,EAAE,MAAM,CAAC,SAAS,CA2B3B,EAAO,SAAS,CAAC,QAAQ,CAAC,eAW7B,EAAK,OAAO,GACZ,EAAO,SAAS,CAAC,MAAM,CAAC,gBAXxB,EAAO,SAAS,CAAC,GAAG,CAAC,cAErB,EAAO,OAAO,CAAC,SAAA,CAAf,EACM,IAAS,GACX,EAAK,SAAS,CAAC,MAAM,CAAC,aAE1B,GA/BA,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAW,EAAE,KAAK,CAAC,EAAM,CAAC,SAAS,CACnC,EAAW,EAAE,KAAK,CAAC,EAAM,CAAC,SAAS,CAEzC,OAAQ,GACN,KAAK,EACL,KAAK,EACL,KAAK,EACH,OAAO,EAAS,aAAa,CAAC,EAEhC,MAAK,EACH,OAAO,EAAW,CAEpB,MAAK,EACH,IAAM,EAAQ,SAAA,CAAd,EACE,OAAA,EAAK,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,G,EAEhC,OAAO,EAAM,GAAY,EAAM,EAGnC,CACF,IAkBF,EAAK,OAAO,CAAC,SAAA,CAAb,EACE,EA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar body = document.querySelector(\"body\");\nvar table = document.querySelector(\"table\");\nvar tbody = document.querySelector(\"tbody\");\nvar header = document.querySelector(\"thead\");\nvar rows = _to_consumable_array(tbody.querySelectorAll(\"tr\"));\nvar theads = _to_consumable_array(header.querySelectorAll(\"th\"));\nheader.addEventListener(\"click\", function(e) {\n    var target = e.target.closest(\"th\");\n    var index = e.target.cellIndex;\n    var sorting = function sorting() {\n        rows.sort(function(a, b) {\n            var aContent = a.cells[index].innerText;\n            var bContent = b.cells[index].innerText;\n            switch(index){\n                case 0:\n                case 1:\n                case 2:\n                    return aContent.localeCompare(bContent);\n                case 3:\n                    return aContent - bContent;\n                case 4:\n                    var toNum = function(item) {\n                        return item.slice(1).split(\",\").join(\"\");\n                    };\n                    return toNum(aContent) - toNum(bContent);\n                default:\n            }\n        });\n    };\n    if (!target.classList.contains(\"asc-sorted\")) {\n        target.classList.add(\"asc-sorted\");\n        theads.forEach(function(item) {\n            if (item !== target) item.classList.remove(\"asc-sorted\");\n        });\n        sorting();\n    } else {\n        rows.reverse();\n        target.classList.remove(\"asc-sorted\");\n    }\n    rows.forEach(function(item) {\n        tbody.append(item);\n    });\n});\ntbody.addEventListener(\"click\", function(e) {\n    var target = e.target.closest(\"tr\");\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            if (row !== target) row.classList.remove(\"active\");\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    target.classList.toggle(\"active\");\n});\nvar form = document.createElement(\"form\");\nform.classList.add(\"new-employee-form\");\ntable.after(form);\nvar categories = _to_consumable_array(header.querySelectorAll(\"th\"));\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = categories[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var category = _step.value;\n        var label = document.createElement(\"label\");\n        label.innerText = category.innerText + \":\";\n        form.append(label);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\nvar labels = _to_consumable_array(document.querySelectorAll(\"label\"));\nvar locations = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\nvar _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\ntry {\n    var _loop = function() {\n        var label = _step1.value;\n        var labelType = label.innerText.slice(0, -1).toLowerCase();\n        if (labelType !== \"office\") {\n            var input = document.createElement(\"input\");\n            input.name = labelType;\n            input.dataset.qa = labelType;\n            input.required = true;\n            label.append(input);\n            switch(labelType){\n                case \"name\":\n                case \"position\":\n                    input.type = \"text\";\n                    break;\n                case \"age\":\n                case \"salary\":\n                    input.type = \"number\";\n                    break;\n            }\n        } else {\n            var select = document.createElement(\"select\");\n            locations.forEach(function(city) {\n                var option = document.createElement(\"option\");\n                option.value = city;\n                option.text = city;\n                select.append(option);\n            });\n            select.name = labelType;\n            select.dataset.qa = labelType;\n            select.required = true;\n            label.append(select);\n        }\n    };\n    for(var _iterator1 = labels[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true)_loop();\n} catch (err) {\n    _didIteratorError1 = true;\n    _iteratorError1 = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n            _iterator1.return();\n        }\n    } finally{\n        if (_didIteratorError1) {\n            throw _iteratorError1;\n        }\n    }\n}\nvar button = document.createElement(\"button\");\nbutton.type = \"submit\";\nbutton.innerText = \"Save to table\";\nform.append(button);\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var formData = new FormData(form);\n    var newName = formData.get(\"name\");\n    var position = formData.get(\"position\");\n    var office = formData.get(\"office\");\n    var age = formData.get(\"age\");\n    var salary = formData.get(\"salary\");\n    var minNameLength = 4;\n    var minAge = 18;\n    var maxAge = 90;\n    if (newName.length < minNameLength) {\n        showNotification(\"warning\", \"Name can not be less than 4 characters\");\n        return;\n    }\n    if (age < minAge || age > maxAge) {\n        showNotification(\"error\", \"Please enter correct age\");\n        return;\n    }\n    tbody.insertAdjacentHTML(\"beforeend\", \"\\n    <tr>\\n      <td>\".concat(newName, \"</td>\\n      <td>\").concat(position, \"</td>\\n      <td>\").concat(office, \"</td>\\n      <td>\").concat(age, \"</td>\\n      <td>$\").concat(parseFloat(salary).toLocaleString(\"en-US\"), \"</td>\\n    </tr>\\n  \"));\n    rows = _to_consumable_array(tbody.querySelectorAll(\"tr\"));\n    showNotification(\"success\", \"New employee is added successfully\");\n    form.reset();\n});\nfunction showNotification(type, title) {\n    var notification = document.createElement(\"div\");\n    notification.className = \"notification \".concat(type);\n    notification.setAttribute(\"data-qa\", \"notification\");\n    var notificationTitle = document.createElement(\"p\");\n    notificationTitle.className = \"title\";\n    notificationTitle.innerText = title;\n    notification.append(notificationTitle);\n    body.append(notification);\n    setTimeout(function() {\n        notification.remove();\n    }, 3000);\n}\ntbody.addEventListener(\"dblclick\", function(e) {\n    var isEmpty = function isEmpty() {\n        if (cellInput.value === null || cellInput.value.trim().length === 0) return true;\n    };\n    var handleInput = function handleInput() {\n        if (isEmpty()) {\n            cellInput.value = initialValue;\n            return;\n        }\n        changedCell.innerText = cellInput.value;\n    };\n    var changedCell = e.target.closest(\"td\");\n    var cellInput = document.createElement(\"input\");\n    cellInput.type = \"text\";\n    cellInput.classList.add(\"cell-input\");\n    var initialValue = changedCell.innerText;\n    cellInput.value = initialValue;\n    changedCell.innerText = \"\";\n    changedCell.append(cellInput);\n    cellInput.focus();\n    cellInput.onblur = function() {\n        handleInput();\n    };\n    changedCell.addEventListener(\"keyup\", function(ev) {\n        if (ev.key === \"Enter\" || ev.keyCode === 13) handleInput();\n    });\n});\n\n//# sourceMappingURL=index.47b593ba.js.map\n","'use strict';\n\nconst body = document.querySelector('body');\nconst table = document.querySelector('table');\nconst tbody = document.querySelector('tbody');\nconst header = document.querySelector('thead');\nlet rows = [...tbody.querySelectorAll('tr')];\nconst theads = [...header.querySelectorAll('th')];\n\nheader.addEventListener('click', (e) => {\n  const target = e.target.closest('th');\n  const index = e.target.cellIndex;\n\n  const sorting = function() {\n    rows.sort((a, b) => {\n      const aContent = a.cells[index].innerText;\n      const bContent = b.cells[index].innerText;\n\n      switch (index) {\n        case 0:\n        case 1:\n        case 2:\n          return aContent.localeCompare(bContent);\n\n        case 3:\n          return aContent - bContent;\n\n        case 4:\n          const toNum = item =>\n            item.slice(1).split(',').join('');\n\n          return toNum(aContent) - toNum(bContent);\n\n        default:\n      }\n    });\n  };\n\n  if (!target.classList.contains('asc-sorted')) {\n    target.classList.add('asc-sorted');\n\n    theads.forEach(item => {\n      if (item !== target) {\n        item.classList.remove('asc-sorted');\n      }\n    });\n\n    sorting();\n  } else {\n    rows.reverse();\n    target.classList.remove('asc-sorted');\n  }\n\n  rows.forEach(item => {\n    tbody.append(item);\n  });\n});\n\ntbody.addEventListener('click', (e) => {\n  const target = e.target.closest('tr');\n\n  for (const row of rows) {\n    if (row !== target) {\n      row.classList.remove('active');\n    }\n  }\n  target.classList.toggle('active');\n});\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\ntable.after(form);\n\nconst categories = [...header.querySelectorAll('th')];\n\nfor (const category of categories) {\n  const label = document.createElement('label');\n\n  label.innerText = category.innerText + ':';\n  form.append(label);\n}\n\nconst labels = [...document.querySelectorAll('label')];\n\nconst locations = [\n  'Tokyo', 'Singapore', 'London', 'New York', 'Edinburgh', 'San Francisco',\n];\n\nfor (const label of labels) {\n  const labelType = label.innerText.slice(0, -1).toLowerCase();\n\n  if (labelType !== 'office') {\n    const input = document.createElement('input');\n\n    input.name = labelType;\n    input.dataset.qa = labelType;\n    input.required = true;\n    label.append(input);\n\n    switch (labelType) {\n      case 'name':\n      case 'position':\n        input.type = 'text';\n        break;\n\n      case 'age':\n      case 'salary':\n        input.type = 'number';\n        break;\n    }\n  } else {\n    const select = document.createElement('select');\n\n    locations.forEach(city => {\n      const option = document.createElement('option');\n\n      option.value = city;\n      option.text = city;\n      select.append(option);\n    });\n\n    select.name = labelType;\n    select.dataset.qa = labelType;\n    select.required = true;\n    label.append(select);\n  }\n};\n\nconst button = document.createElement('button');\n\nbutton.type = 'submit';\nbutton.innerText = 'Save to table';\nform.append(button);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const formData = new FormData(form);\n  const newName = formData.get('name');\n  const position = formData.get('position');\n  const office = formData.get('office');\n  const age = formData.get('age');\n  const salary = formData.get('salary');\n\n  const minNameLength = 4;\n  const minAge = 18;\n  const maxAge = 90;\n\n  if (newName.length < minNameLength) {\n    showNotification('warning', 'Name can not be less than 4 characters');\n\n    return;\n  };\n\n  if (age < minAge || age > maxAge) {\n    showNotification('error', 'Please enter correct age');\n\n    return;\n  };\n\n  tbody.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${newName}</td>\n      <td>${position}</td>\n      <td>${office}</td>\n      <td>${age}</td>\n      <td>$${parseFloat(salary).toLocaleString('en-US')}</td>\n    </tr>\n  `);\n\n  rows = [...tbody.querySelectorAll('tr')];\n  showNotification('success', 'New employee is added successfully');\n  form.reset();\n});\n\nfunction showNotification(type, title) {\n  const notification = document.createElement('div');\n\n  notification.className = `notification ${type}`;\n  notification.setAttribute('data-qa', 'notification');\n\n  const notificationTitle = document.createElement('p');\n\n  notificationTitle.className = 'title';\n  notificationTitle.innerText = title;\n  notification.append(notificationTitle);\n\n  body.append(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 3000);\n};\n\ntbody.addEventListener('dblclick', (e) => {\n  const changedCell = e.target.closest('td');\n  const cellInput = document.createElement('input');\n\n  cellInput.type = 'text';\n\n  cellInput.classList.add('cell-input');\n\n  const initialValue = changedCell.innerText;\n\n  cellInput.value = initialValue;\n  changedCell.innerText = '';\n  changedCell.append(cellInput);\n  cellInput.focus();\n\n  function isEmpty() {\n    if (cellInput.value === null || cellInput.value.trim().length === 0) {\n      return true;\n    }\n  };\n\n  function handleInput() {\n    if (isEmpty()) {\n      cellInput.value = initialValue;\n\n      return;\n    }\n    changedCell.innerText = cellInput.value;\n  };\n\n  cellInput.onblur = function() {\n    handleInput();\n  };\n\n  changedCell.addEventListener('keyup', (ev) => {\n    if (ev.key === 'Enter' || ev.keyCode === 13) {\n      handleInput();\n    }\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","body","document","querySelector","table","tbody","header","rows","querySelectorAll","theads","addEventListener","e","target","closest","index","cellIndex","classList","contains","reverse","remove","add","forEach","item","sort","a","b","aContent","cells","innerText","bContent","localeCompare","toNum","split","join","append","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","row","value","err","return","toggle","form","createElement","after","categories","category","label","labels","locations","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","_loop","labelType","toLowerCase","input","dataset","qa","required","type","select","city","option","text","button","showNotification","title","notification","className","concat","setAttribute","notificationTitle","setTimeout","preventDefault","formData","FormData","newName","get","position","office","age","salary","insertAdjacentHTML","parseFloat","toLocaleString","reset","isEmpty","cellInput","trim","handleInput","initialValue","changedCell","focus","onblur","ev","key","keyCode"],"version":3,"file":"index.47b593ba.js.map"}